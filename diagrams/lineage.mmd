graph TD
    %% Node styles
    classDef table fill:#f96,stroke:#333,stroke-width:2px,color:#000,font-weight:bold;
    classDef stored_proc fill:#9cf,stroke:#333,stroke-width:2px,color:#000,font-weight:bold;
    classDef column fill:#fff,stroke:#333,stroke-width:1px,color:#000,font-style:italic;


    subgraph ACMEERP_EXCHANGERATES["ACMEERP.EXCHANGERATES"]
        ACMEERP_EXCHANGERATES_TOP_1_RateToBase("TOP 1 RateToBase");
        class ACMEERP_EXCHANGERATES_TOP_1_RateToBase column;
    end

    subgraph AcmeERP_Employees["AcmeERP.Employees"]
        AcmeERP_Employees_e_EmployeeID("e.EmployeeID");
        class AcmeERP_Employees_e_EmployeeID column;
        AcmeERP_Employees_e_BaseSalary("e.BaseSalary");
        class AcmeERP_Employees_e_BaseSalary column;
        AcmeERP_Employees_Bonus("Bonus");
        class AcmeERP_Employees_Bonus column;
        AcmeERP_Employees_GrossSalary("GrossSalary");
        class AcmeERP_Employees_GrossSalary column;
        AcmeERP_Employees_Tax("Tax");
        class AcmeERP_Employees_Tax column;
        AcmeERP_Employees_NetSalary("NetSalary");
        class AcmeERP_Employees_NetSalary column;
        AcmeERP_Employees_ISNULL_e_Currency_USD_AS_Currency("ISNULL(e.Currency, 'USD') AS Currency");
        class AcmeERP_Employees_ISNULL_e_Currency_USD_AS_Currency column;
    end

    subgraph AcmeERP_ExchangeRates["AcmeERP.ExchangeRates"]
        AcmeERP_ExchangeRates_RateToBase("RateToBase");
        class AcmeERP_ExchangeRates_RateToBase column;
        AcmeERP_ExchangeRates_TOP_1_RateToBase("TOP 1 RateToBase");
        class AcmeERP_ExchangeRates_TOP_1_RateToBase column;
        AcmeERP_ExchangeRates_AVG_RateToBase_("AVG(RateToBase)");
        class AcmeERP_ExchangeRates_AVG_RateToBase_ column;
    end

    subgraph AcmeERP_PayrollLogs["AcmeERP.PayrollLogs"]
        AcmeERP_PayrollLogs_EmployeeID("EmployeeID");
        class AcmeERP_PayrollLogs_EmployeeID column;
        AcmeERP_PayrollLogs_PayPeriodStart("PayPeriodStart");
        class AcmeERP_PayrollLogs_PayPeriodStart column;
        AcmeERP_PayrollLogs_PayPeriodEnd("PayPeriodEnd");
        class AcmeERP_PayrollLogs_PayPeriodEnd column;
        AcmeERP_PayrollLogs_GrossSalary("GrossSalary");
        class AcmeERP_PayrollLogs_GrossSalary column;
        AcmeERP_PayrollLogs_TaxDeducted("TaxDeducted");
        class AcmeERP_PayrollLogs_TaxDeducted column;
    end

    subgraph AcmeERP_StockMovements["AcmeERP.StockMovements"]
        AcmeERP_StockMovements_MovementID("MovementID");
        class AcmeERP_StockMovements_MovementID column;
        AcmeERP_StockMovements_ProductID("ProductID");
        class AcmeERP_StockMovements_ProductID column;
        AcmeERP_StockMovements_Quantity("Quantity");
        class AcmeERP_StockMovements_Quantity column;
        AcmeERP_StockMovements_UnitCost("UnitCost");
        class AcmeERP_StockMovements_UnitCost column;
        AcmeERP_StockMovements_SUM_Quantity_OVER_PARTITION_BY_ProductID_ORDER_BY_MovementDate_ROWS_BETWEEN_UNBOUNDED_PRECEDING_AND_CURRENT_ROW_AS_RunningTotal("SUM(Quantity) OVER (PARTITION BY ProductID ORDER BY MovementDate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS RunningTotal");
        class AcmeERP_StockMovements_SUM_Quantity_OVER_PARTITION_BY_ProductID_ORDER_BY_MovementDate_ROWS_BETWEEN_UNBOUNDED_PRECEDING_AND_CURRENT_ROW_AS_RunningTotal column;
    end

    subgraph CTE_FIFO["CTE_FIFO"]
        CTE_FIFO_AVG_UnitCost_AS_FifoCostEstimate("AVG(UnitCost) AS FifoCostEstimate");
        class CTE_FIFO_AVG_UnitCost_AS_FifoCostEstimate column;
    end

    subgraph INVENTORY["INVENTORY"]
        INVENTORY_SUM_quantity_("SUM(quantity)");
        class INVENTORY_SUM_quantity_ column;
    end

    subgraph _PayrollCalc["#PayrollCalc"]
        _PayrollCalc_EmployeeID("EmployeeID");
        class _PayrollCalc_EmployeeID column;
        _PayrollCalc_BaseSalary("BaseSalary");
        class _PayrollCalc_BaseSalary column;
        _PayrollCalc_Bonus("Bonus");
        class _PayrollCalc_Bonus column;
        _PayrollCalc_GrossSalary("GrossSalary");
        class _PayrollCalc_GrossSalary column;
        _PayrollCalc_Tax("Tax");
        class _PayrollCalc_Tax column;
        _PayrollCalc_NetSalary("NetSalary");
        class _PayrollCalc_NetSalary column;
        _PayrollCalc_Currency("Currency");
        class _PayrollCalc_Currency column;
        _PayrollCalc_ConvertedSalary("ConvertedSalary");
        class _PayrollCalc_ConvertedSalary column;
        _PayrollCalc__PayPeriodStart("@PayPeriodStart");
        class _PayrollCalc__PayPeriodStart column;
        _PayrollCalc__PayPeriodEnd("@PayPeriodEnd");
        class _PayrollCalc__PayPeriodEnd column;
    end

    subgraph client_orders["client_orders"]
        client_orders_placeholder["(no columns specified)"];
        class client_orders_placeholder column;
    end

    subgraph employee_log["employee_log"]
        employee_log_emp_id("emp_id");
        class employee_log_emp_id column;
        employee_log_emp_name("emp_name");
        class employee_log_emp_name column;
        employee_log_log_time("log_time");
        class employee_log_log_time column;
    end

    subgraph employees["employees"]
        employees_placeholder["(no columns specified)"];
        class employees_placeholder column;
    end

    subgraph inventory["inventory"]
        inventory_placeholder["(no columns specified)"];
        class inventory_placeholder column;
    end

    subgraph products["products"]
        products_restock("restock");
        class products_restock column;
    end
    AcmeERP_usp_CalculateFifoCost("AcmeERP.usp_CalculateFifoCost");
    class AcmeERP_usp_CalculateFifoCost stored_proc;
    AcmeERP_usp_ConvertToBase("AcmeERP.usp_ConvertToBase");
    class AcmeERP_usp_ConvertToBase stored_proc;
    AcmeERP_usp_ProcessFullPayrollCycle("AcmeERP.usp_ProcessFullPayrollCycle");
    class AcmeERP_usp_ProcessFullPayrollCycle stored_proc;
    log_hr_employees("log_hr_employees");
    class log_hr_employees stored_proc;
    sp_sum_client_orders("sp_sum_client_orders");
    class sp_sum_client_orders stored_proc;
    sp_update_inventory("sp_update_inventory");
    class sp_update_inventory stored_proc;
    test1("test1");
    class test1 stored_proc;

    %% Relationships
    AcmeERP_usp_CalculateFifoCost --> AcmeERP_StockMovements;
    AcmeERP_usp_CalculateFifoCost --> CTE_FIFO;
    AcmeERP_usp_ConvertToBase --> AcmeERP_ExchangeRates;
    AcmeERP_usp_ProcessFullPayrollCycle --> ACMEERP_EXCHANGERATES;
    AcmeERP_usp_ProcessFullPayrollCycle --> AcmeERP_Employees;
    AcmeERP_usp_ProcessFullPayrollCycle --> AcmeERP_ExchangeRates;
    AcmeERP_usp_ProcessFullPayrollCycle --> AcmeERP_PayrollLogs;
    AcmeERP_usp_ProcessFullPayrollCycle --> _PayrollCalc;
    log_hr_employees --> employee_log;
    log_hr_employees --> employees;
    sp_sum_client_orders --> client_orders;
    sp_update_inventory --> INVENTORY;
    sp_update_inventory --> inventory;
    sp_update_inventory --> products;
    test1 --> client_orders;
