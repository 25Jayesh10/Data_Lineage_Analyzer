[
    {
        "proc_name": "AcmeERP.usp_CalculateFifoCost",
        "params": [
            {
                "name": "@ProductID",
                "type": "INT",
                "mode": "IN"
            },
            {
                "name": "@QuantityRequested",
                "type": "INT",
                "mode": "IN"
            }
        ],
        "return_type": "VOID",
        "variables": [],
        "statements": [
            {
                "type": "SELECT",
                "query": "SELECT \n            MovementID,\n            ProductID,\n            Quantity,\n            UnitCost,\n            SUM(Quantity) OVER (PARTITION BY ProductID ORDER BY MovementDate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS RunningTotal\n        FROM AcmeERP.StockMovements\n        WHERE ProductID = @ProductID AND Direction = 'IN'"
            },
            {
                "type": "SELECT",
                "query": "SELECT AVG(UnitCost) AS FifoCostEstimate\n    FROM CTE_FIFO\n    WHERE RunningTotal <= @QuantityRequested"
            }
        ]
    },
    {
        "proc_name": "AcmeERP.usp_ProcessFullPayrollCycle",
        "params": [
            {
                "name": "@PayPeriodStart",
                "type": "DATE",
                "mode": "IN"
            },
            {
                "name": "@PayPeriodEnd",
                "type": "DATE",
                "mode": "IN"
            }
        ],
        "return_type": "VOID",
        "variables": [],
        "statements": [
            {
                "type": "SET",
                "expression": "SET NOCOUNT ON"
            },
            {
                "type": "TRY",
                "body": [],
                "catch": [
                    {
                        "exception": "@@ERROR",
                        "body": []
                    }
                ]
            }
        ]
    },
    {
        "proc_name": "AcmeERP.usp_ConvertToBase",
        "params": [
            {
                "name": "@CurrencyCode",
                "type": "CHAR(3)",
                "mode": "IN"
            },
            {
                "name": "@Amount",
                "type": "DECIMAL(18,2)",
                "mode": "IN"
            },
            {
                "name": "@ConversionDate",
                "type": "DATE",
                "mode": "IN"
            }
        ],
        "return_type": "VOID",
        "variables": [],
        "statements": [
            {
                "type": "SELECT",
                "query": "SELECT @Rate = RateToBase\n    FROM AcmeERP.ExchangeRates\n    WHERE CurrencyCode = @CurrencyCode AND RateDate = @ConversionDate"
            },
            {
                "type": "IF",
                "condition": "@Rate IS NULL",
                "then": [
                    {
                        "type": "SELECT",
                        "query": "SELECT TOP 1 @Rate = RateToBase\n        FROM AcmeERP.ExchangeRates\n        WHERE CurrencyCode = @CurrencyCode AND RateDate < @ConversionDate\n        ORDER BY RateDate DESC"
                    }
                ]
            },
            {
                "type": "IF",
                "condition": "@Rate IS NULL",
                "then": [
                    {
                        "type": "SELECT",
                        "query": "SELECT @Rate = AVG(RateToBase)\n        FROM AcmeERP.ExchangeRates\n        WHERE CurrencyCode = @CurrencyCode AND RateDate BETWEEN DATEADD(DAY, -7, @ConversionDate) AND @ConversionDate"
                    }
                ]
            },
            {
                "type": "IF",
                "condition": "@Rate IS NULL",
                "then": [
                    {
                        "type": "SET",
                        "name": "@Rate",
                        "value": "1"
                    }
                ]
            },
            {
                "type": "SELECT",
                "query": "SELECT @Amount * @Rate AS ConvertedAmount"
            }
        ]
    },
    {
        "proc_name": "sp_sum_client_orders",
        "params": [
            {
                "name": "@client_id",
                "type": "INT",
                "mode": "IN"
            },
            {
                "name": "@from_date",
                "type": "DATE",
                "mode": "IN"
            },
            {
                "name": "@to_date",
                "type": "DATE",
                "mode": "IN"
            }
        ],
        "return_type": "VOID",
        "variables": [],
        "statements": [
            {
                "type": "DECLARE_CURSOR",
                "cursor_name": "cur_orders",
                "query": "<missing_query>"
            },
            {
                "type": "SET",
                "name": "@grand_total",
                "value": "0.00"
            },
            {
                "type": "WHILE",
                "condition": "@@sqlstatus = 0",
                "body": [
                    {
                        "type": "IF",
                        "condition": "@order_total > 750",
                        "then": [
                            {
                                "type": "SET",
                                "name": "@grand_total",
                                "value": "@grand_total + (@order_total * 0.95)"
                            }
                        ],
                        "else": [
                            {
                                "type": "SET",
                                "name": "@grand_total",
                                "value": "@grand_total + @order_total"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "IF",
                "condition": "@grand_total > 10000",
                "then": [
                    {
                        "type": "RAISE",
                        "message": "<parse_error>",
                        "level": "ERROR",
                        "args": []
                    }
                ]
            },
            {
                "type": "RETURN",
                "value": "@grand_total"
            }
        ]
    },
    {
        "proc_name": "log_hr_employees",
        "params": [],
        "return_type": "VOID",
        "variables": [],
        "statements": [
            {
                "type": "DECLARE_CURSOR",
                "cursor_name": "emp_cursor",
                "query": "<missing_query>"
            },
            {
                "type": "WHILE",
                "condition": "@@sqlstatus = 0",
                "body": []
            }
        ]
    },
    {
        "proc_name": "test1",
        "params": [
            {
                "name": "@client_id",
                "type": "INT",
                "mode": "IN"
            },
            {
                "name": "@from_date",
                "type": "DATE",
                "mode": "IN"
            },
            {
                "name": "@to_date",
                "type": "DATE",
                "mode": "IN"
            }
        ],
        "return_type": "VOID",
        "variables": [],
        "statements": [
            {
                "type": "SET",
                "name": "@grand_total",
                "value": "0.00"
            },
            {
                "type": "DECLARE_CURSOR",
                "cursor_name": "cur_orders",
                "query": "<missing_query>"
            },
            {
                "type": "WHILE",
                "condition": "@@FETCH_STATUS = 0",
                "body": [
                    {
                        "type": "IF",
                        "condition": "@order_total > 750",
                        "then": [
                            {
                                "type": "SET",
                                "name": "@grand_total",
                                "value": "@grand_total + @order_total * 0.95"
                            }
                        ],
                        "else": [
                            {
                                "type": "SET",
                                "name": "@grand_total",
                                "value": "@grand_total + @order_total"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "IF",
                "condition": "@grand_total > 10000",
                "then": [
                    {
                        "type": "RAISE",
                        "message": "<parse_error>",
                        "level": "ERROR",
                        "args": []
                    }
                ]
            },
            {
                "type": "RETURN",
                "value": "@grand_total"
            }
        ]
    },
    {
        "proc_name": "sp_sum_client_orders",
        "params": [
            {
                "name": "@client_id",
                "type": "INT",
                "mode": "IN"
            },
            {
                "name": "@from_date",
                "type": "DATE",
                "mode": "IN"
            },
            {
                "name": "@to_date",
                "type": "DATE",
                "mode": "IN"
            }
        ],
        "return_type": "VOID",
        "variables": [],
        "statements": [
            {
                "type": "DECLARE_CURSOR",
                "cursor_name": "cur_orders",
                "query": "<missing_query>"
            },
            {
                "type": "SET",
                "name": "@grand_total",
                "value": "0.00"
            },
            {
                "type": "WHILE",
                "condition": "@@sqlstatus = 0",
                "body": [
                    {
                        "type": "IF",
                        "condition": "@order_total > 750",
                        "then": [
                            {
                                "type": "SET",
                                "name": "@grand_total",
                                "value": "@grand_total + (@order_total * 0.95)"
                            }
                        ],
                        "else": [
                            {
                                "type": "SET",
                                "name": "@grand_total",
                                "value": "@grand_total + @order_total"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "IF",
                "condition": "@grand_total > 10000",
                "then": [
                    {
                        "type": "RAISE",
                        "message": "<parse_error>",
                        "level": "ERROR",
                        "args": []
                    }
                ]
            },
            {
                "type": "RETURN",
                "value": "@grand_total"
            }
        ]
    },
    {
        "proc_name": "sp_update_inventory",
        "params": [],
        "return_type": "VOID",
        "variables": [],
        "statements": [
            {
                "type": "DECLARE_CURSOR",
                "cursor_name": "inventory_cursor",
                "query": "<missing_query>"
            },
            {
                "type": "WHILE",
                "condition": "@@FETCH_STATUS = 0",
                "body": [
                    {
                        "type": "SELECT",
                        "query": "SELECT @quantity = SUM(quantity) FROM inventory WHERE product_id = @product_id"
                    },
                    {
                        "type": "IF",
                        "condition": "@quantity < 10",
                        "then": [
                            {
                                "type": "UPDATE",
                                "table": "products",
                                "set": {
                                    "restock": "1"
                                },
                                "where": "product_id = @product_id"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]