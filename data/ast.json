[
  {
    "proc_name": "sp_sum_client_orders",
    "params": [
      {
        "name": "@client_id",
        "type": "INTEGER"
      },
      {
        "name": "@from_date",
        "type": "DATE"
      },
      {
        "name": "@to_date",
        "type": "DATE"
      }
    ],
    "return_type": "NUMERIC(10,2)",
    "variables": [
      {
        "name": "@grand_total",
        "type": "NUMERIC(10,2)"
      },
      {
        "name": "@order_total",
        "type": "NUMERIC(10,2)"
      }
    ],
    "statements": [
      {
        "type": "DECLARE_CURSOR",
        "cursor_name": "cur_orders",
        "query": "SELECT total_price FROM client_orders WHERE client_id = @client_id AND order_date BETWEEN @from_date AND @to_date"
      },
      {
        "type": "SET",
        "name": "@grand_total",
        "value": "0.00"
      },
      {
        "type": "OPEN_CURSOR",
        "cursor_name": "cur_orders"
      },
      {
        "type": "FETCH_CURSOR",
        "cursor_name": "cur_orders",
        "fetch_into": ["@order_total"]
      },
      {
        "type": "WHILE",
        "condition": "@@sqlstatus = 0",
        "body": [
          {
            "type": "IF",
            "condition": "@order_total > 750",
            "then": [
              {
                "type": "SET",
                "name": "@grand_total",
                "value": "@grand_total + (@order_total * 0.95)"
              }
            ],
            "else": [
              {
                "type": "SET",
                "name": "@grand_total",
                "value": "@grand_total + @order_total"
              }
            ]
          },
          {
            "type": "FETCH_CURSOR",
            "cursor_name": "cur_orders",
            "fetch_into": ["@order_total"]
          }
        ]
      },
      {
        "type": "CLOSE_CURSOR",
        "cursor_name": "cur_orders"
      },
      {
        "type": "DEALLOCATE_CURSOR",
        "cursor_name": "cur_orders"
      },
      {
        "type": "IF",
        "condition": "@grand_total > 10000",
        "then": [
          {
            "type": "RAISE",
            "message": "High-value threshold exceeded for client"
          }
        ]
      },
      {
        "type": "RETURN",
        "expression": "@grand_total"
      }
    ]
  }
]
